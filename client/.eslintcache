[{"/Users/Jonathan/Developer/projects/web-projects/lyric-render/client/src/App.js":"1","/Users/Jonathan/Developer/projects/web-projects/lyric-render/client/src/index.js":"2","/Users/Jonathan/Developer/projects/web-projects/lyric-render/client/src/reportWebVitals.js":"3","/Users/Jonathan/Developer/projects/web-projects/lyric-render/client/src/ChatInput.js":"4","/Users/Jonathan/Developer/projects/web-projects/lyric-render/client/src/Chat.js":"5","/Users/Jonathan/Developer/projects/web-projects/lyric-render/client/src/ChatWindow.js":"6"},{"size":156,"mtime":1610858479805,"results":"7","hashOfConfig":"8"},{"size":500,"mtime":1610780687975,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610780687976,"results":"10","hashOfConfig":"8"},{"size":719,"mtime":1610869810470,"results":"11","hashOfConfig":"8"},{"size":1013,"mtime":1610873626596,"results":"12","hashOfConfig":"8"},{"size":486,"mtime":1610869976027,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1j9gc0h",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/Jonathan/Developer/projects/web-projects/lyric-render/client/src/App.js",[],["28","29"],"/Users/Jonathan/Developer/projects/web-projects/lyric-render/client/src/index.js",[],"/Users/Jonathan/Developer/projects/web-projects/lyric-render/client/src/reportWebVitals.js",[],"/Users/Jonathan/Developer/projects/web-projects/lyric-render/client/src/ChatInput.js",[],"/Users/Jonathan/Developer/projects/web-projects/lyric-render/client/src/Chat.js",["30"],"import { useEffect, useRef, useState } from 'react';\nimport ChatWindow from './ChatWindow.js';\nimport ChatInput from './ChatInput.js';\nimport { io } from 'socket.io-client';\nconst ENDPOINT = \"http://localhost:5000\";\n\nfunction Chat() {\n\tconst dummy = useRef();\n  const [messages, setMessages] = useState([]);\n\n\t// Handler that handles a new message\n  const handleNewMessage = (newMessage) => {\n    setMessages(currentMessages => [...currentMessages, newMessage]);\n  }\n\n\t/* Side effect that runs after the component is rendered\n\t * Using this to scroll the chat to the latest message\n\t */\n\tuseEffect(() => {\n\t\tdummy.current.scrollIntoView({ behavior: 'smooth' });\n\t});\n\n\tuseEffect(() => {\n\t\tconsole.log(\"The componenet has mounted. Should only mount once\");\n\t\tconst socket = io(ENDPOINT);\n\t}, []);\n\n\n\treturn (\n\t\t<div className=\"chat\">\n\t\t\t<ChatWindow messages={messages}>\n\t\t\t\t<span ref={dummy}></span>\n\t\t\t</ChatWindow>\n\t\t\t<ChatInput\n\t\t\t\tonEnteredMessage={handleNewMessage}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Chat;\n","/Users/Jonathan/Developer/projects/web-projects/lyric-render/client/src/ChatWindow.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":25,"column":9,"nodeType":"37","messageId":"38","endLine":25,"endColumn":15},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'socket' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]